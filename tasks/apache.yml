---
- name: Fail when apache doesn't exist
  shell: test -x /usr/sbin/{{ apache2_name }}
  changed_when: false

- name: Detect installed apache version
  shell: >
    set -o pipefail
    /usr/sbin/{{ apache2_name }} -v|grep -Po '(?<=Apache/)\d.\d.\d+'
  changed_when: false
  register: apache_version_result

- name: Apache Version is Defined
  set_fact:
    apache_version: '{{ apache_version_result.stdout }}'
  when: apache_version_result is defined
    and apache_version_result.stdout is defined
  # ^ The 'when' clause is required so the role can survive '--check' mode.

- name: Make sure we're using a supported apache version
  assert:
    that: apache_version is version('2.2.0', '>=')

- name: Override some variables when using apache < 2.4.0
  set_fact:
    apache_auth: |
      Order allow,deny
      Allow from all
    apache_ssl_line: ''
  when: apache_version is version('2.4.0', '<')

- name: Override some variables when using apache < 2.4.8
  set_fact:
    apache_dhparams: ''
  when: apache_version is version('2.4.8', '<')

- name: Set apache restart handler variables
  set_fact:
    apache_service: '{{ apache2_name }}'
    apache_restart_state: reloaded

- name: Create apache includes dir
  file:
    path: "/etc/{{ apache2_name }}/includes"
    state: directory
  notify: restart apache

- name: Create apache acme-challenge conf
  template:
    src: "etc/{{ apache2_name }}/includes/letsencrypt-acme-challenge.conf.j2"
    dest: "/etc/{{ apache2_name }}/includes/letsencrypt-acme-challenge.conf"
    force: yes
  notify: restart apache

- name: Grep for the acme include in default Apache site
  shell: grep -q 'Include /etc/{{ apache2_name }}/includes/letsencrypt-acme-challenge.conf' /etc/{{ apache2_name }}/{{ apache2_vhosts_conf_dir }}/{{ default_vhost_filename }}
  register: acme_grep_result
  ignore_errors: true
  changed_when: false

- name: Reset default site to non-ssl version
  template:
    src: "etc/{{ apache2_name }}/{{ apache2_vhosts_conf_dir }}/{{ default_vhost_filename }}.pre-ssl.j2"
    dest: "/etc/{{ apache2_name }}/{{ apache2_vhosts_conf_dir }}/{{ default_vhost_filename }}"
    backup: yes
  when: acme_grep_result is defined
    and acme_grep_result.rc is defined
    and acme_grep_result.rc != 0
  notify: restart apache

- name: Enable the default site
  file:
    path: "/etc/{{ apache2_name }}/{{ apache2_vhosts_enable_dir }}/{{ default_vhost_filename }}"
    state: "link"
    src: "/etc/{{ apache2_name }}/{{ apache2_vhosts_conf_dir }}/{{ default_vhost_filename }}"
  notify: restart apache
  when: ansible_os_family == 'Debian'

- name: Reload apache if necessary
  meta: flush_handlers

- name: Automatically renew LE certs with cron
  cron:
    name: "Renew letsencrypt SSL certificates"
    minute: "{{ letsencrypt_renew_cron_minute }}"
    day: "{{ letsencrypt_renew_cron_day }}"
    hour: "{{ letsencrypt_renew_cron_hour }}"
    job: "/usr/local/bin/certbot-auto renew --quiet --no-self-upgrade --webroot-path {{ letsencrypt_webroot }} && /usr/sbin/apachectl configtest 2>&1 | /bin/grep -v 'Syntax OK' || {{ service_binary }} {{ apache2_name }} reload"
  when: ansible_os_family == 'Debian'
  tags:
    - letsencrypt_cron
